(window.webpackJsonp=window.webpackJsonp||[]).push([[92],{388:function(r,a,e){"use strict";e.r(a);var n=e(0),l=Object(n.a)({},(function(){var r=this,a=r.$createElement,e=r._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":r.$parent.slotKey}},[e("h1",{attrs:{id:"programming-paradigms"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#programming-paradigms"}},[r._v("#")]),r._v(" Programming paradigms")]),r._v(" "),e("p",[r._v("基于"),e("labels-keywords-ProgrammingLanguages"),r._v("功能进行分类的方法，\n一种语言可以同时具备多种范式，\n"),e("links-external-Info",{attrs:{url:"https://upload.wikimedia.org/wikipedia/commons/f/f7/Programming_paradigms.svg",label:"各范式关系",icon:"wikipedia"}}),r._v(" "),e("links-external-Info",{attrs:{url:"https://en.wikipedia.org/wiki/Comparison_of_multi-paradigm_programming_languages",label:"编程语言所支持的范式比较",icon:"wikipedia"}})],1),r._v(" "),e("ul",[e("li",[e("links-internal-Keywords",{attrs:{url:"/note/programming_paradigms/generic",label:"Generic"}}),r._v("\n：增强抽象能力。")],1),r._v(" "),e("li",[e("links-internal-Keywords",{attrs:{url:"/note/programming_paradigms/data-driven",label:"Data-driven"}}),r._v("\n：提取逻辑到数据格式。")],1),r._v(" "),e("li",[e("links-internal-Keywords",{attrs:{url:"/note/programming_paradigms/event-driven",label:"Event-driven"}}),r._v("\n：流程取决于事件。")],1),r._v(" "),e("li",[e("links-internal-Keywords",{attrs:{url:"/note/programming_paradigms/parallel_computing",label:"Parallel computing"}}),r._v("\n："),e("labels-keywords-Cpu"),r._v("在同一时间完成单个任务。")],1),r._v(" "),e("li",[e("links-internal-Keywords",{attrs:{url:"/note/programming_paradigms/concurrent_computing",label:"Concurrent computing"}}),r._v("\n："),e("labels-keywords-Cpu"),r._v("不断进行任务切换在同一时间完成多个任务。")],1),r._v(" "),e("li",[e("links-internal-Keywords",{attrs:{url:"/note/programming_paradigms/imperative/",label:"Imperative"}}),r._v("\n：怎么做？")],1),r._v(" "),e("li",[e("links-internal-Keywords",{attrs:{url:"/note/programming_paradigms/declarative/",label:"Declarative"}}),r._v("\n：做什么？\n"),e("ul",[e("li",[e("links-internal-Keywords",{attrs:{url:"/note/programming_paradigms/declarative/dataflow/",label:"Dataflow"}}),r._v("\n：程序建模为操作间数据流有向图，实现数据流原理和结构。\n"),e("ul",[e("li",[e("links-internal-Keywords",{attrs:{url:"/note/programming_paradigms/declarative/dataflow/reactive/",label:"Reactive"}}),r._v("\n：表达静态/动态数据流，相关计算模型自动传播改变值。")],1)])],1),r._v(" "),e("li",[e("links-internal-Keywords",{attrs:{url:"/note/programming_paradigms/declarative/functional/",label:"Functional"}}),r._v("基于"),e("labels-keywords-LambdaCalculus"),r._v("。\n")],1)])],1),r._v(" "),e("li",[e("links-internal-Keywords",{attrs:{url:"/note/programming_paradigms/structured/",label:"Structured"}}),r._v("\n：通过使用"),e("labels-keywords-ControlFlow"),r._v("提高程序清晰度、质量、开发时间。\n"),e("ul",[e("li",[e("links-internal-Keywords",{attrs:{url:"/note/programming_paradigms/structured/object-oriented/",label:"Object-oriented"}}),r._v("\n：基于"),e("labels-keywords-Object"),r._v("，包含数据、代码。")],1)])],1)])])}),[],!1,null,null,null);a.default=l.exports}}]);